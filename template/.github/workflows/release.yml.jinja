name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build on {% raw %}${{ matrix.os }}{% endraw %}
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.9']
      fail-fast: false  # Continue with other OS builds even if one fails

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ matrix.python-version }}{% endraw %}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    
    - name: Install dependencies
      run: |
        poetry install --no-interaction
    
    - name: List installed packages
      run: poetry run pip list
    
    - name: Build with PyInstaller
      run: |
        poetry run pyinstaller {{ project_name }}.spec
      
    - name: Verify build artifacts
      run: |
        ls -la dist/
      shell: bash
    
    - name: Set environment variables
      run: |
        echo "VERSION={% raw %}${GITHUB_REF#refs/tags/}{% endraw %}" >> $GITHUB_ENV
        echo "APP_NAME={{ project_name }}" >> $GITHUB_ENV
      shell: bash

    - name: Zip Windows artifacts
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        7z a ../{% raw %}${{ env.APP_NAME }}{% endraw %}-windows-{% raw %}${{ env.VERSION }}{% endraw %}.zip {% raw %}${{ env.APP_NAME }}{% endraw %}.exe
      shell: bash
    
    - name: Zip Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd dist
        zip -r ../{% raw %}${{ env.APP_NAME }}{% endraw %}-linux-{% raw %}${{ env.VERSION }}{% endraw %}.zip {% raw %}${{ env.APP_NAME }}{% endraw %}
      shell: bash
    
    - name: Zip macOS artifacts
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r ../{% raw %}${{ env.APP_NAME }}{% endraw %}-macos-{% raw %}${{ env.VERSION }}{% endraw %}.zip {% raw %}${{ env.APP_NAME }}{% endraw %}
      shell: bash
    
    - name: Upload Windows Release Asset
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      with:
        files: {% raw %}${{ env.APP_NAME }}{% endraw %}-windows-{% raw %}${{ env.VERSION }}{% endraw %}.zip

    - name: Upload Linux Release Asset
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
      with:
        files: {% raw %}${{ env.APP_NAME }}{% endraw %}-linux-{% raw %}${{ env.VERSION }}{% endraw %}.zip

    - name: Upload macOS Release Asset
      uses: softprops/action-gh-release@v1
      if: matrix.os == 'macos-latest' && startsWith(github.ref, 'refs/tags/')
      with:
        files: {% raw %}${{ env.APP_NAME }}{% endraw %}-macos-{% raw %}${{ env.VERSION }}{% endraw %}.zip 